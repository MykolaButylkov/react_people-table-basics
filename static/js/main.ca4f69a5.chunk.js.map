{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/PeopleTable/PeopleTabel.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","PeopleTable","people","slugPerson","length","map","person","name","sex","born","died","fatherName","motherName","slug","mother","find","child","father","classNames","to","PeoplePage","useState","setPeople","error","setError","isLoading","setIsLoading","loadPeople","result","useEffect","App","match","useMatch","role","isActive","path","element","replace","index","params","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.ca4f69a5.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  people: Person[] | undefined,\n  slugPerson: string | undefined,\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people, slugPerson }) => {\n  return (\n    <>\n      {people && people.length > 0 && (\n        <table\n          data-cy=\"peopleTable\"\n          className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n        >\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Sex</th>\n              <th>Born</th>\n              <th>Died</th>\n              <th>Mother</th>\n              <th>Father</th>\n            </tr>\n          </thead>\n          <tbody>\n            {people.map((person) => {\n              const {\n                name,\n                sex,\n                born,\n                died,\n                fatherName,\n                motherName,\n                slug,\n              } = person;\n              const mother = people.find(\n                (child) => (child.motherName === person.name),\n              ) || { slug: '' };\n              const father = people.find(\n                (child) => (child.fatherName === person.name),\n              ) || { slug: '' };\n\n              return (\n                <tr\n                  data-cy=\"person\"\n                  className={\n                    classNames(\n                      { 'has-background-warning': person.slug === slugPerson },\n                    )\n                  }\n                >\n                  <td>\n                    <Link\n                      to={`/people/${slug}`}\n                      className={classNames(\n                        { 'has-text-danger': sex === 'f' },\n                      )}\n                    >\n                      {name}\n                    </Link>\n                  </td>\n                  <td>{sex}</td>\n                  <td>{born}</td>\n                  <td>{died}</td>\n                  <td>\n                    {mother.slug !== '' && (\n                      <Link\n                        to={`/people/${mother?.slug}`}\n                        className=\"has-text-danger\"\n                      >\n                        {motherName}\n                      </Link>\n                    )}\n                    {mother.slug === '' && (\n                      <p>{motherName || '-'}</p>\n                    )}\n                  </td>\n                  <td>\n                    {father.slug !== '' && (\n                      <Link\n                        to={`/people/${father?.slug}`}\n                      >\n                        {fatherName}\n                      </Link>\n                    )}\n                    {father.slug === '' && (\n                      <p>{fatherName || '-'}</p>\n                    )}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable/PeopleTabel';\n\ntype Props = {\n  slugPerson: string | undefined,\n};\n\nexport const PeoplePage: React.FC<Props> = ({ slugPerson }) => {\n  const [people, setPeople] = useState<Person[]>();\n  const [error, setError] = useState<boolean>();\n  const [isLoading, setIsLoading] = useState<boolean>();\n\n  const loadPeople = async () => {\n    setIsLoading(true);\n    try {\n      const result = await getPeople();\n\n      setPeople(result);\n      setIsLoading(false);\n    } catch (e) {\n      setError(true);\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (<Loader />)}\n          {error && isLoading && (\n            <>\n              <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                Something went wrong\n              </p>\n              <p data-cy=\"noPeopleMessage\">\n                There are no people on the server\n              </p>\n            </>\n          )}\n\n          <PeopleTable people={people} slugPerson={slugPerson} />\n        </div>\n      </div>\n    </>\n  );\n};\n","import { FC } from 'react';\nimport {\n  NavLink, Navigate, Route, Routes, useMatch,\n} from 'react-router-dom';\nimport classNames from 'classnames';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\n\nimport './App.scss';\n\nexport const App: FC = () => {\n  const match = useMatch('/people/:slug');\n\n  return (\n    <>\n      <div data-cy=\"app\">\n        <nav\n          data-cy=\"nav\"\n          className=\"navbar is-fixed-top has-shadow\"\n          role=\"navigation\"\n          aria-label=\"main navigation\"\n        >\n          <div className=\"container\">\n            <div className=\"navbar-brand\">\n              <NavLink\n                to=\"/\"\n                className={({ isActive }) => classNames(\n                  'navbar-item', { 'has-background-grey-lighter': isActive },\n                )}\n              >\n                Home\n              </NavLink>\n\n              <NavLink\n                to=\"people\"\n                className={({ isActive }) => classNames(\n                  'navbar-item', { 'has-background-grey-lighter': isActive },\n                )}\n              >\n                People\n              </NavLink>\n            </div>\n          </div>\n        </nav>\n\n        <main className=\"section\">\n          <div className=\"container\">\n            <Routes>\n              <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n              <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n              <Route path=\"people\">\n                <Route\n                  index\n                  element={(\n                    <>\n                      <PeoplePage slugPerson={match?.params.slug} />\n                    </>\n                  )}\n                />\n                <Route\n                  path=\":slugPerson\"\n                  element={(\n                    <>\n                      <PeoplePage slugPerson={match?.params.slug} />\n                    </>\n                  )}\n                />\n              </Route>\n              <Route\n                path=\"*\"\n                element={(\n                  <>\n                    <h1 className=\"title\">Page not found</h1>\n                  </>\n                )}\n              />\n            </Routes>\n          </div>\n        </main>\n      </div>\n\n    </>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}